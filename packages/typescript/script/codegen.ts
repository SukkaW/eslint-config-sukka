import fsp from 'fs/promises';
import path from 'path';
import { runInContext, createContext } from 'vm';

(async () => {
  const typescriptESLintDir = path.dirname(require.resolve('@typescript-eslint/eslint-plugin/package.json'));
  const typescriptESLintBuiltinOverridesPath = path.join(typescriptESLintDir, 'dist/configs/eslint-recommended.js');
  const typescriptESLintBuiltinOverridesScript = await fsp.readFile(typescriptESLintBuiltinOverridesPath, 'utf-8');

  const script = `((module) => {${typescriptESLintBuiltinOverridesScript}\n})(module);`;

  const ctx = {
    module: {
      exports: {
        overrides: {}
      }
    }
  };
  createContext(ctx);
  runInContext(script, ctx);

  const typescriptESLintBuiltinOverrides = ctx.module.exports.overrides;

  const outputPath = path.join(__dirname, '../src/generated/typescript-eslint-builtin-overrides.ts');

  return fsp.writeFile(
    outputPath,
    [
      '// This file is generated by script/codegen.ts',
      '// !! DON\'T EDIT THIS FILE BY HAND !!',
      `export const overrides = ${JSON.stringify(typescriptESLintBuiltinOverrides, null, 2)};`
    ].join('\n')
  );
})();
